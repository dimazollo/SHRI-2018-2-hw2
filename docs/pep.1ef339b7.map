{"version":3,"sources":["script/pep.js"],"names":["global","factory","exports","module","define","amd","PointerEventsPolyfill","MOUSE_PROPS","MOUSE_DEFAULTS","PointerEvent","inType","inDict","Object","create","e","document","createEvent","initEvent","bubbles","cancelable","p","i","length","buttons","pressure","x","clientX","y","clientY","pointerId","width","height","tiltX","tiltY","twist","tangentialPressure","pointerType","hwTimestamp","isPrimary","USE_MAP","PointerMap","window","Map","prototype","forEach","SparseArrayMap","array","size","set","k","v","undefined","delete","has","get","clear","callback","thisArg","call","CLONE_PROPS","CLONE_DEFAULTS","BOUNDARY_EVENTS","HAS_SVG_INSTANCE","SVGElementInstance","dispatcher","pointermap","eventMap","captureInfo","eventSources","eventSourceList","registerSource","name","source","s","newEvents","events","bind","push","register","element","l","es","unregister","contains","container","contained","ex","down","inEvent","fireEvent","move","up","enter","leave","over","out","cancel","leaveOut","event","propagate","enterOver","eventHandler","_handledByPE","type","fn","listen","target","addEvent","unlisten","removeEvent","eventName","addEventListener","boundHandler","removeEventListener","makeEvent","relatedTarget","preventDefault","_target","dispatchEvent","cloneEvent","eventCopy","correspondingUseElement","getTarget","capture","propagateDown","targets","parentNode","reverse","setCapture","inPointerId","inTarget","skipDispatch","releaseCapture","implicitRelease","asyncDispatchEvent","t","requestAnimationFrame","targeting","shadow","inEl","shadowRoot","webkitShadowRoot","canTarget","Boolean","elementFromPoint","targetingShadow","olderShadow","os","olderShadowRoot","se","querySelector","allShadows","shadows","searchRoot","inRoot","st","sr","ssr","owner","nodeType","Node","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","findTarget","Array","map","toArray","slice","filter","MO","MutationObserver","WebKitMutationObserver","OBSERVER_INIT","subtree","childList","attributes","attributeOldValue","attributeFilter","Installer","add","remove","changed","binder","addCallback","removeCallback","changedCallback","observer","mutationWatcher","shadowSelector","selector","rule","watchSubtree","observe","enableOnSubtree","readyState","installOnLoad","installNewSubtree","findElements","addElement","querySelectorAll","removeElement","el","elementChanged","oldValue","concatLists","accum","list","concat","isElement","n","ELEMENT_NODE","flattenMutationTree","inNodes","tree","reduce","mutations","mutationHandler","m","addedNodes","removedNodes","attrib2css","selectors","styles","hasNativePE","MSPointerEvent","hasShadowRoot","ShadowDOMPolyfill","head","createShadowRoot","BUTTON_TO_BUTTONS","HAS_BUTTONS","MouseEvent","mouseEvents","INSTALLER","POINTER_ID","POINTER_TYPE","lastTouches","isEventSimulatedFromTouch","lts","dx","Math","abs","dy","prepareEvent","pd","prepareButtonsForMove","which","mousedown","button","mousemove","mouseup","mouseover","mouseout","deactivateMouse","pointermap$1","touchEvents","elementAdded","a","getAttribute","touchActionToScrollType","_scrollType","elementRemoved","oldSt","scrollTypes","EMITTER","XSCROLLER","YSCROLLER","SCROLLER","touchAction","exec","firstTouch","isPrimaryTouch","inTouch","identifier","setPrimaryTouch","firstXY","X","Y","scrolling","cancelResetClickCount","removePrimaryPointer","inPointer","resetClickCount","clickCount","resetId","setTimeout","clearTimeout","typeToButtons","ret","touchToPointer","cte","currentTouchEvent","id","detail","radiusX","webkitRadiusX","radiusY","webkitRadiusY","force","webkitForce","altKey","ctrlKey","metaKey","shiftKey","self","processTouches","inFunction","tl","changedTouches","shouldScroll","scrollAxis","currentTarget","oa","findTouch","inTL","inId","vacuumTouches","touches","d","value","key","cancelOut","touchstart","dedupSynthMouse","overDown","outTarget","touchmove","touchcancel","moveOverOut","pointer","outEvent","touchend","upOut","cleanUpPointer","lt","indexOf","splice","pointermap$2","r","h","HAS_BITMAP_TYPE","MSPOINTER_TYPE_MOUSE","msEvents","POINTER_TYPES","cleanup","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSLostPointerCapture","MSGotPointerCapture","assertActive","error","Error","assertConnected","elem","parent","ownerDocument","inActiveButtonState","pointerevents","navigator","msPointerEnabled","msSetPointerCapture","msReleasePointerCapture","applyAttributeStyles","String","createElement","textContent","appendChild","applyPolyfill","tp","msMaxTouchPoints","defineProperty","enumerable","ontouchstart","Element","setPointerCapture","defineProperties","targetFinding"],"mappings":"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","file":"pep.1ef339b7.map","sourceRoot":"../src","sourcesContent":["/*!\n * PEP v0.4.3 | https://github.com/jquery/PEP\n * Copyright jQuery Foundation and other contributors | http://jquery.org/license\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n      (global.PointerEventsPolyfill = factory());\n}(this, function () { 'use strict';\n\n  /**\n   * This is the constructor for new PointerEvents.\n   *\n   * New Pointer Events must be given a type, and an optional dictionary of\n   * initialization properties.\n   *\n   * Due to certain platform requirements, events returned from the constructor\n   * identify as MouseEvents.\n   *\n   * @constructor\n   * @param {String} inType The type of the event to create.\n   * @param {Object} [inDict] An optional dictionary of initial event properties.\n   * @return {Event} A new PointerEvent of type `inType`, initialized with properties from `inDict`.\n   */\n  var MOUSE_PROPS = [\n    'bubbles',\n    'cancelable',\n    'view',\n    'detail',\n    'screenX',\n    'screenY',\n    'clientX',\n    'clientY',\n    'ctrlKey',\n    'altKey',\n    'shiftKey',\n    'metaKey',\n    'button',\n    'relatedTarget',\n    'pageX',\n    'pageY'\n  ];\n\n  var MOUSE_DEFAULTS = [\n    false,\n    false,\n    null,\n    null,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    0,\n    null,\n    0,\n    0\n  ];\n\n  function PointerEvent(inType, inDict) {\n    inDict = inDict || Object.create(null);\n\n    var e = document.createEvent('Event');\n    e.initEvent(inType, inDict.bubbles || false, inDict.cancelable || false);\n\n    // define inherited MouseEvent properties\n    // skip bubbles and cancelable since they're set above in initEvent()\n    for (var i = 2, p; i < MOUSE_PROPS.length; i++) {\n      p = MOUSE_PROPS[i];\n      e[p] = inDict[p] || MOUSE_DEFAULTS[i];\n    }\n    e.buttons = inDict.buttons || 0;\n\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n\n    if (inDict.pressure && e.buttons) {\n      pressure = inDict.pressure;\n    } else {\n      pressure = e.buttons ? 0.5 : 0;\n    }\n\n    // add x/y properties aliased to clientX/Y\n    e.x = e.clientX;\n    e.y = e.clientY;\n\n    // define the properties of the PointerEvent interface\n    e.pointerId = inDict.pointerId || 0;\n    e.width = inDict.width || 0;\n    e.height = inDict.height || 0;\n    e.pressure = pressure;\n    e.tiltX = inDict.tiltX || 0;\n    e.tiltY = inDict.tiltY || 0;\n    e.twist = inDict.twist || 0;\n    e.tangentialPressure = inDict.tangentialPressure || 0;\n    e.pointerType = inDict.pointerType || '';\n    e.hwTimestamp = inDict.hwTimestamp || 0;\n    e.isPrimary = inDict.isPrimary || false;\n    return e;\n  }\n\n  /**\n   * This module implements a map of pointer states\n   */\n  var USE_MAP = window.Map && window.Map.prototype.forEach;\n  var PointerMap = USE_MAP ? Map : SparseArrayMap;\n\n  function SparseArrayMap() {\n    this.array = [];\n    this.size = 0;\n  }\n\n  SparseArrayMap.prototype = {\n    set: function(k, v) {\n      if (v === undefined) {\n        return this.delete(k);\n      }\n      if (!this.has(k)) {\n        this.size++;\n      }\n      this.array[k] = v;\n    },\n    has: function(k) {\n      return this.array[k] !== undefined;\n    },\n    delete: function(k) {\n      if (this.has(k)) {\n        delete this.array[k];\n        this.size--;\n      }\n    },\n    get: function(k) {\n      return this.array[k];\n    },\n    clear: function() {\n      this.array.length = 0;\n      this.size = 0;\n    },\n\n    // return value, key, map\n    forEach: function(callback, thisArg) {\n      return this.array.forEach(function(v, k) {\n        callback.call(thisArg, v, k, this);\n      }, this);\n    }\n  };\n\n  var CLONE_PROPS = [\n\n    // MouseEvent\n    'bubbles',\n    'cancelable',\n    'view',\n    'detail',\n    'screenX',\n    'screenY',\n    'clientX',\n    'clientY',\n    'ctrlKey',\n    'altKey',\n    'shiftKey',\n    'metaKey',\n    'button',\n    'relatedTarget',\n\n    // DOM Level 3\n    'buttons',\n\n    // PointerEvent\n    'pointerId',\n    'width',\n    'height',\n    'pressure',\n    'tiltX',\n    'tiltY',\n    'pointerType',\n    'hwTimestamp',\n    'isPrimary',\n\n    // event instance\n    'type',\n    'target',\n    'currentTarget',\n    'which',\n    'pageX',\n    'pageY',\n    'timeStamp'\n  ];\n\n  var CLONE_DEFAULTS = [\n\n    // MouseEvent\n    false,\n    false,\n    null,\n    null,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    0,\n    null,\n\n    // DOM Level 3\n    0,\n\n    // PointerEvent\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    '',\n    0,\n    false,\n\n    // event instance\n    '',\n    null,\n    null,\n    0,\n    0,\n    0,\n    0\n  ];\n\n  var BOUNDARY_EVENTS = {\n    'pointerover': 1,\n    'pointerout': 1,\n    'pointerenter': 1,\n    'pointerleave': 1\n  };\n\n  var HAS_SVG_INSTANCE = (typeof SVGElementInstance !== 'undefined');\n\n  /**\n   * This module is for normalizing events. Mouse and Touch events will be\n   * collected here, and fire PointerEvents that have the same semantics, no\n   * matter the source.\n   * Events fired:\n   *   - pointerdown: a pointing is added\n   *   - pointerup: a pointer is removed\n   *   - pointermove: a pointer is moved\n   *   - pointerover: a pointer crosses into an element\n   *   - pointerout: a pointer leaves an element\n   *   - pointercancel: a pointer will no longer generate events\n   */\n  var dispatcher = {\n    pointermap: new PointerMap(),\n    eventMap: Object.create(null),\n    captureInfo: Object.create(null),\n\n    // Scope objects for native events.\n    // This exists for ease of testing.\n    eventSources: Object.create(null),\n    eventSourceList: [],\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * `inSource` must contain an array of event names named `events`, and\n     * functions with the names specified in the `events` array.\n     * @param {string} name A name for the event source\n     * @param {Object} source A new source of platform events.\n     */\n    registerSource: function(name, source) {\n      var s = source;\n      var newEvents = s.events;\n      if (newEvents) {\n        newEvents.forEach(function(e) {\n          if (s[e]) {\n            this.eventMap[e] = s[e].bind(s);\n          }\n        }, this);\n        this.eventSources[name] = s;\n        this.eventSourceList.push(s);\n      }\n    },\n    register: function(element) {\n      var l = this.eventSourceList.length;\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\n\n        // call eventsource register\n        es.register.call(es, element);\n      }\n    },\n    unregister: function(element) {\n      var l = this.eventSourceList.length;\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\n\n        // call eventsource register\n        es.unregister.call(es, element);\n      }\n    },\n    contains: /*scope.external.contains || */function(container, contained) {\n      try {\n        return container.contains(contained);\n      } catch (ex) {\n\n        // most likely: https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n        return false;\n      }\n    },\n\n    // EVENTS\n    down: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerdown', inEvent);\n    },\n    move: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointermove', inEvent);\n    },\n    up: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerup', inEvent);\n    },\n    enter: function(inEvent) {\n      inEvent.bubbles = false;\n      this.fireEvent('pointerenter', inEvent);\n    },\n    leave: function(inEvent) {\n      inEvent.bubbles = false;\n      this.fireEvent('pointerleave', inEvent);\n    },\n    over: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerover', inEvent);\n    },\n    out: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerout', inEvent);\n    },\n    cancel: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointercancel', inEvent);\n    },\n    leaveOut: function(event) {\n      this.out(event);\n      this.propagate(event, this.leave, false);\n    },\n    enterOver: function(event) {\n      this.over(event);\n      this.propagate(event, this.enter, true);\n    },\n\n    // LISTENER LOGIC\n    eventHandler: function(inEvent) {\n\n      // This is used to prevent multiple dispatch of pointerevents from\n      // platform events. This can happen when two elements in different scopes\n      // are set up to create pointer events, which is relevant to Shadow DOM.\n      if (inEvent._handledByPE) {\n        return;\n      }\n      var type = inEvent.type;\n      var fn = this.eventMap && this.eventMap[type];\n      if (fn) {\n        fn(inEvent);\n      }\n      inEvent._handledByPE = true;\n    },\n\n    // set up event listeners\n    listen: function(target, events) {\n      events.forEach(function(e) {\n        this.addEvent(target, e);\n      }, this);\n    },\n\n    // remove event listeners\n    unlisten: function(target, events) {\n      events.forEach(function(e) {\n        this.removeEvent(target, e);\n      }, this);\n    },\n    addEvent: /*scope.external.addEvent || */function(target, eventName) {\n      target.addEventListener(eventName, this.boundHandler);\n    },\n    removeEvent: /*scope.external.removeEvent || */function(target, eventName) {\n      target.removeEventListener(eventName, this.boundHandler);\n    },\n\n    // EVENT CREATION AND TRACKING\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `inEvent`.\n     *\n     * @param {string} inType A string representing the type of event to create\n     * @param {Event} inEvent A platform event with a target\n     * @return {Event} A PointerEvent of type `inType`\n     */\n    makeEvent: function(inType, inEvent) {\n\n      // relatedTarget must be null if pointer is captured\n      if (this.captureInfo[inEvent.pointerId]) {\n        inEvent.relatedTarget = null;\n      }\n      var e = new PointerEvent(inType, inEvent);\n      if (inEvent.preventDefault) {\n        e.preventDefault = inEvent.preventDefault;\n      }\n      e._target = e._target || inEvent.target;\n      return e;\n    },\n\n    // make and dispatch an event in one call\n    fireEvent: function(inType, inEvent) {\n      var e = this.makeEvent(inType, inEvent);\n      return this.dispatchEvent(e);\n    },\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} inEvent An event that contains properties to copy.\n     * @return {Object} An object containing shallow copies of `inEvent`'s\n     *    properties.\n     */\n    cloneEvent: function(inEvent) {\n      var eventCopy = Object.create(null);\n      var p;\n      for (var i = 0; i < CLONE_PROPS.length; i++) {\n        p = CLONE_PROPS[i];\n        eventCopy[p] = inEvent[p] || CLONE_DEFAULTS[i];\n\n        // Work around SVGInstanceElement shadow tree\n        // Return the <use> element that is represented by the instance for Safari, Chrome, IE.\n        // This is the behavior implemented by Firefox.\n        if (HAS_SVG_INSTANCE && (p === 'target' || p === 'relatedTarget')) {\n          if (eventCopy[p] instanceof SVGElementInstance) {\n            eventCopy[p] = eventCopy[p].correspondingUseElement;\n          }\n        }\n      }\n\n      // keep the semantics of preventDefault\n      if (inEvent.preventDefault) {\n        eventCopy.preventDefault = function() {\n          inEvent.preventDefault();\n        };\n      }\n      return eventCopy;\n    },\n    getTarget: function(inEvent) {\n      var capture = this.captureInfo[inEvent.pointerId];\n      if (!capture) {\n        return inEvent._target;\n      }\n      if (inEvent._target === capture || !(inEvent.type in BOUNDARY_EVENTS)) {\n        return capture;\n      }\n    },\n    propagate: function(event, fn, propagateDown) {\n      var target = event.target;\n      var targets = [];\n\n      // Order of conditions due to document.contains() missing in IE.\n      while (target !== document && !target.contains(event.relatedTarget)) {\n        targets.push(target);\n        target = target.parentNode;\n\n        // Touch: Do not propagate if node is detached.\n        if (!target) {\n          return;\n        }\n      }\n      if (propagateDown) {\n        targets.reverse();\n      }\n      targets.forEach(function(target) {\n        event.target = target;\n        fn.call(this, event);\n      }, this);\n    },\n    setCapture: function(inPointerId, inTarget, skipDispatch) {\n      if (this.captureInfo[inPointerId]) {\n        this.releaseCapture(inPointerId, skipDispatch);\n      }\n\n      this.captureInfo[inPointerId] = inTarget;\n      this.implicitRelease = this.releaseCapture.bind(this, inPointerId, skipDispatch);\n      document.addEventListener('pointerup', this.implicitRelease);\n      document.addEventListener('pointercancel', this.implicitRelease);\n\n      var e = new PointerEvent('gotpointercapture');\n      e.pointerId = inPointerId;\n      e._target = inTarget;\n\n      if (!skipDispatch) {\n        this.asyncDispatchEvent(e);\n      }\n    },\n    releaseCapture: function(inPointerId, skipDispatch) {\n      var t = this.captureInfo[inPointerId];\n      if (!t) {\n        return;\n      }\n\n      this.captureInfo[inPointerId] = undefined;\n      document.removeEventListener('pointerup', this.implicitRelease);\n      document.removeEventListener('pointercancel', this.implicitRelease);\n\n      var e = new PointerEvent('lostpointercapture');\n      e.pointerId = inPointerId;\n      e._target = t;\n\n      if (!skipDispatch) {\n        this.asyncDispatchEvent(e);\n      }\n    },\n    /**\n     * Dispatches the event to its target.\n     *\n     * @param {Event} inEvent The event to be dispatched.\n     * @return {Boolean} True if an event handler returns true, false otherwise.\n     */\n    dispatchEvent: /*scope.external.dispatchEvent || */function(inEvent) {\n      var t = this.getTarget(inEvent);\n      if (t) {\n        return t.dispatchEvent(inEvent);\n      }\n    },\n    asyncDispatchEvent: function(inEvent) {\n      requestAnimationFrame(this.dispatchEvent.bind(this, inEvent));\n    }\n  };\n  dispatcher.boundHandler = dispatcher.eventHandler.bind(dispatcher);\n\n  var targeting = {\n    shadow: function(inEl) {\n      if (inEl) {\n        return inEl.shadowRoot || inEl.webkitShadowRoot;\n      }\n    },\n    canTarget: function(shadow) {\n      return shadow && Boolean(shadow.elementFromPoint);\n    },\n    targetingShadow: function(inEl) {\n      var s = this.shadow(inEl);\n      if (this.canTarget(s)) {\n        return s;\n      }\n    },\n    olderShadow: function(shadow) {\n      var os = shadow.olderShadowRoot;\n      if (!os) {\n        var se = shadow.querySelector('shadow');\n        if (se) {\n          os = se.olderShadowRoot;\n        }\n      }\n      return os;\n    },\n    allShadows: function(element) {\n      var shadows = [];\n      var s = this.shadow(element);\n      while (s) {\n        shadows.push(s);\n        s = this.olderShadow(s);\n      }\n      return shadows;\n    },\n    searchRoot: function(inRoot, x, y) {\n      if (inRoot) {\n        var t = inRoot.elementFromPoint(x, y);\n        var st, sr;\n\n        // is element a shadow host?\n        sr = this.targetingShadow(t);\n        while (sr) {\n\n          // find the the element inside the shadow root\n          st = sr.elementFromPoint(x, y);\n          if (!st) {\n\n            // check for older shadows\n            sr = this.olderShadow(sr);\n          } else {\n\n            // shadowed element may contain a shadow root\n            var ssr = this.targetingShadow(st);\n            return this.searchRoot(ssr, x, y) || st;\n          }\n        }\n\n        // light dom element is the target\n        return t;\n      }\n    },\n    owner: function(element) {\n      var s = element;\n\n      // walk up until you hit the shadow root or document\n      while (s.parentNode) {\n        s = s.parentNode;\n      }\n\n      // the owner element is expected to be a Document or ShadowRoot\n      if (s.nodeType !== Node.DOCUMENT_NODE && s.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n        s = document;\n      }\n      return s;\n    },\n    findTarget: function(inEvent) {\n      var x = inEvent.clientX;\n      var y = inEvent.clientY;\n\n      // if the listener is in the shadow root, it is much faster to start there\n      var s = this.owner(inEvent.target);\n\n      // if x, y is not in this root, fall back to document search\n      if (!s.elementFromPoint(x, y)) {\n        s = document;\n      }\n      return this.searchRoot(s, x, y);\n    }\n  };\n\n  var forEach = Array.prototype.forEach.call.bind(Array.prototype.forEach);\n  var map = Array.prototype.map.call.bind(Array.prototype.map);\n  var toArray = Array.prototype.slice.call.bind(Array.prototype.slice);\n  var filter = Array.prototype.filter.call.bind(Array.prototype.filter);\n  var MO = window.MutationObserver || window.WebKitMutationObserver;\n  var SELECTOR = '[touch-action]';\n  var OBSERVER_INIT = {\n    subtree: true,\n    childList: true,\n    attributes: true,\n    attributeOldValue: true,\n    attributeFilter: ['touch-action']\n  };\n\n  function Installer(add, remove, changed, binder) {\n    this.addCallback = add.bind(binder);\n    this.removeCallback = remove.bind(binder);\n    this.changedCallback = changed.bind(binder);\n    if (MO) {\n      this.observer = new MO(this.mutationWatcher.bind(this));\n    }\n  }\n\n  Installer.prototype = {\n    watchSubtree: function(target) {\n\n      // Only watch scopes that can target find, as these are top-level.\n      // Otherwise we can see duplicate additions and removals that add noise.\n      //\n      // TODO(dfreedman): For some instances with ShadowDOMPolyfill, we can see\n      // a removal without an insertion when a node is redistributed among\n      // shadows. Since it all ends up correct in the document, watching only\n      // the document will yield the correct mutations to watch.\n      if (this.observer && targeting.canTarget(target)) {\n        this.observer.observe(target, OBSERVER_INIT);\n      }\n    },\n    enableOnSubtree: function(target) {\n      this.watchSubtree(target);\n      if (target === document && document.readyState !== 'complete') {\n        this.installOnLoad();\n      } else {\n        this.installNewSubtree(target);\n      }\n    },\n    installNewSubtree: function(target) {\n      forEach(this.findElements(target), this.addElement, this);\n    },\n    findElements: function(target) {\n      if (target.querySelectorAll) {\n        return target.querySelectorAll(SELECTOR);\n      }\n      return [];\n    },\n    removeElement: function(el) {\n      this.removeCallback(el);\n    },\n    addElement: function(el) {\n      this.addCallback(el);\n    },\n    elementChanged: function(el, oldValue) {\n      this.changedCallback(el, oldValue);\n    },\n    concatLists: function(accum, list) {\n      return accum.concat(toArray(list));\n    },\n\n    // register all touch-action = none nodes on document load\n    installOnLoad: function() {\n      document.addEventListener('readystatechange', function() {\n        if (document.readyState === 'complete') {\n          this.installNewSubtree(document);\n        }\n      }.bind(this));\n    },\n    isElement: function(n) {\n      return n.nodeType === Node.ELEMENT_NODE;\n    },\n    flattenMutationTree: function(inNodes) {\n\n      // find children with touch-action\n      var tree = map(inNodes, this.findElements, this);\n\n      // make sure the added nodes are accounted for\n      tree.push(filter(inNodes, this.isElement));\n\n      // flatten the list\n      return tree.reduce(this.concatLists, []);\n    },\n    mutationWatcher: function(mutations) {\n      mutations.forEach(this.mutationHandler, this);\n    },\n    mutationHandler: function(m) {\n      if (m.type === 'childList') {\n        var added = this.flattenMutationTree(m.addedNodes);\n        added.forEach(this.addElement, this);\n        var removed = this.flattenMutationTree(m.removedNodes);\n        removed.forEach(this.removeElement, this);\n      } else if (m.type === 'attributes') {\n        this.elementChanged(m.target, m.oldValue);\n      }\n    }\n  };\n\n  function shadowSelector(v) {\n    return 'body /shadow-deep/ ' + selector(v);\n  }\n  function selector(v) {\n    return '[touch-action=\"' + v + '\"]';\n  }\n  function rule(v) {\n    return '{ -ms-touch-action: ' + v + '; touch-action: ' + v + '; }';\n  }\n  var attrib2css = [\n    'none',\n    'auto',\n    'pan-x',\n    'pan-y',\n    {\n      rule: 'pan-x pan-y',\n      selectors: [\n        'pan-x pan-y',\n        'pan-y pan-x'\n      ]\n    }\n  ];\n  var styles = '';\n\n  // only install stylesheet if the browser has touch action support\n  var hasNativePE = window.PointerEvent || window.MSPointerEvent;\n\n  // only add shadow selectors if shadowdom is supported\n  var hasShadowRoot = !window.ShadowDOMPolyfill && document.head.createShadowRoot;\n\n  function applyAttributeStyles() {\n    if (hasNativePE) {\n      attrib2css.forEach(function(r) {\n        if (String(r) === r) {\n          styles += selector(r) + rule(r) + '\\n';\n          if (hasShadowRoot) {\n            styles += shadowSelector(r) + rule(r) + '\\n';\n          }\n        } else {\n          styles += r.selectors.map(selector) + rule(r.rule) + '\\n';\n          if (hasShadowRoot) {\n            styles += r.selectors.map(shadowSelector) + rule(r.rule) + '\\n';\n          }\n        }\n      });\n\n      var el = document.createElement('style');\n      el.textContent = styles;\n      document.head.appendChild(el);\n    }\n  }\n\n  var pointermap = dispatcher.pointermap;\n\n  // radius around touchend that swallows mouse events\n  var DEDUP_DIST = 25;\n\n  // left, middle, right, back, forward\n  var BUTTON_TO_BUTTONS = [1, 4, 2, 8, 16];\n\n  var HAS_BUTTONS = false;\n  try {\n    HAS_BUTTONS = new MouseEvent('test', { buttons: 1 }).buttons === 1;\n  } catch (e) {}\n\n  // handler block for native mouse events\n  var mouseEvents = {\n    POINTER_ID: 1,\n    POINTER_TYPE: 'mouse',\n    events: [\n      'mousedown',\n      'mousemove',\n      'mouseup',\n      'mouseover',\n      'mouseout'\n    ],\n    register: function(target) {\n      dispatcher.listen(target, this.events);\n    },\n    unregister: function(target) {\n      dispatcher.unlisten(target, this.events);\n    },\n    lastTouches: [],\n\n    // collide with the global mouse listener\n    isEventSimulatedFromTouch: function(inEvent) {\n      var lts = this.lastTouches;\n      var x = inEvent.clientX;\n      var y = inEvent.clientY;\n      for (var i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n\n        // simulated mouse events will be swallowed near a primary touchend\n        var dx = Math.abs(x - t.x);\n        var dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n          return true;\n        }\n      }\n    },\n    prepareEvent: function(inEvent) {\n      var e = dispatcher.cloneEvent(inEvent);\n\n      // forward mouse preventDefault\n      var pd = e.preventDefault;\n      e.preventDefault = function() {\n        inEvent.preventDefault();\n        pd();\n      };\n      e.pointerId = this.POINTER_ID;\n      e.isPrimary = true;\n      e.pointerType = this.POINTER_TYPE;\n      return e;\n    },\n    prepareButtonsForMove: function(e, inEvent) {\n      var p = pointermap.get(this.POINTER_ID);\n\n      // Update buttons state after possible out-of-document mouseup.\n      if (inEvent.which === 0 || !p) {\n        e.buttons = 0;\n      } else {\n        e.buttons = p.buttons;\n      }\n      inEvent.buttons = e.buttons;\n    },\n    mousedown: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var p = pointermap.get(this.POINTER_ID);\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) {\n          e.buttons = BUTTON_TO_BUTTONS[e.button];\n          if (p) { e.buttons |= p.buttons; }\n          inEvent.buttons = e.buttons;\n        }\n        pointermap.set(this.POINTER_ID, inEvent);\n        if (!p || p.buttons === 0) {\n          dispatcher.down(e);\n        } else {\n          dispatcher.move(e);\n        }\n      }\n    },\n    mousemove: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        e.button = -1;\n        pointermap.set(this.POINTER_ID, inEvent);\n        dispatcher.move(e);\n      }\n    },\n    mouseup: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var p = pointermap.get(this.POINTER_ID);\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) {\n          var up = BUTTON_TO_BUTTONS[e.button];\n\n          // Produces wrong state of buttons in Browsers without `buttons` support\n          // when a mouse button that was pressed outside the document is released\n          // inside and other buttons are still pressed down.\n          e.buttons = p ? p.buttons & ~up : 0;\n          inEvent.buttons = e.buttons;\n        }\n        pointermap.set(this.POINTER_ID, inEvent);\n\n        // Support: Firefox <=44 only\n        // FF Ubuntu includes the lifted button in the `buttons` property on\n        // mouseup.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1223366\n        e.buttons &= ~BUTTON_TO_BUTTONS[e.button];\n        if (e.buttons === 0) {\n          dispatcher.up(e);\n        } else {\n          dispatcher.move(e);\n        }\n      }\n    },\n    mouseover: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        e.button = -1;\n        pointermap.set(this.POINTER_ID, inEvent);\n        dispatcher.enterOver(e);\n      }\n    },\n    mouseout: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        e.button = -1;\n        dispatcher.leaveOut(e);\n      }\n    },\n    cancel: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.cancel(e);\n      this.deactivateMouse();\n    },\n    deactivateMouse: function() {\n      pointermap.delete(this.POINTER_ID);\n    }\n  };\n\n  var captureInfo = dispatcher.captureInfo;\n  var findTarget = targeting.findTarget.bind(targeting);\n  var allShadows = targeting.allShadows.bind(targeting);\n  var pointermap$1 = dispatcher.pointermap;\n\n  // This should be long enough to ignore compat mouse events made by touch\n  var DEDUP_TIMEOUT = 2500;\n  var CLICK_COUNT_TIMEOUT = 200;\n  var ATTRIB = 'touch-action';\n  var INSTALLER;\n\n  // handler block for native touch events\n  var touchEvents = {\n    events: [\n      'touchstart',\n      'touchmove',\n      'touchend',\n      'touchcancel'\n    ],\n    register: function(target) {\n      INSTALLER.enableOnSubtree(target);\n    },\n    unregister: function() {\n\n      // TODO(dfreedman): is it worth it to disconnect the MO?\n    },\n    elementAdded: function(el) {\n      var a = el.getAttribute(ATTRIB);\n      var st = this.touchActionToScrollType(a);\n      if (st) {\n        el._scrollType = st;\n        dispatcher.listen(el, this.events);\n\n        // set touch-action on shadows as well\n        allShadows(el).forEach(function(s) {\n          s._scrollType = st;\n          dispatcher.listen(s, this.events);\n        }, this);\n      }\n    },\n    elementRemoved: function(el) {\n      el._scrollType = undefined;\n      dispatcher.unlisten(el, this.events);\n\n      // remove touch-action from shadow\n      allShadows(el).forEach(function(s) {\n        s._scrollType = undefined;\n        dispatcher.unlisten(s, this.events);\n      }, this);\n    },\n    elementChanged: function(el, oldValue) {\n      var a = el.getAttribute(ATTRIB);\n      var st = this.touchActionToScrollType(a);\n      var oldSt = this.touchActionToScrollType(oldValue);\n\n      // simply update scrollType if listeners are already established\n      if (st && oldSt) {\n        el._scrollType = st;\n        allShadows(el).forEach(function(s) {\n          s._scrollType = st;\n        }, this);\n      } else if (oldSt) {\n        this.elementRemoved(el);\n      } else if (st) {\n        this.elementAdded(el);\n      }\n    },\n    scrollTypes: {\n      EMITTER: 'none',\n      XSCROLLER: 'pan-x',\n      YSCROLLER: 'pan-y',\n      SCROLLER: /^(?:pan-x pan-y)|(?:pan-y pan-x)|auto$/\n    },\n    touchActionToScrollType: function(touchAction) {\n      var t = touchAction;\n      var st = this.scrollTypes;\n      if (t === 'none') {\n        return 'none';\n      } else if (t === st.XSCROLLER) {\n        return 'X';\n      } else if (t === st.YSCROLLER) {\n        return 'Y';\n      } else if (st.SCROLLER.exec(t)) {\n        return 'XY';\n      }\n    },\n    POINTER_TYPE: 'touch',\n    firstTouch: null,\n    isPrimaryTouch: function(inTouch) {\n      return this.firstTouch === inTouch.identifier;\n    },\n    setPrimaryTouch: function(inTouch) {\n\n      // set primary touch if there no pointers, or the only pointer is the mouse\n      if (pointermap$1.size === 0 || (pointermap$1.size === 1 && pointermap$1.has(1))) {\n        this.firstTouch = inTouch.identifier;\n        this.firstXY = { X: inTouch.clientX, Y: inTouch.clientY };\n        this.scrolling = false;\n        this.cancelResetClickCount();\n      }\n    },\n    removePrimaryPointer: function(inPointer) {\n      if (inPointer.isPrimary) {\n        this.firstTouch = null;\n        this.firstXY = null;\n        this.resetClickCount();\n      }\n    },\n    clickCount: 0,\n    resetId: null,\n    resetClickCount: function() {\n      var fn = function() {\n        this.clickCount = 0;\n        this.resetId = null;\n      }.bind(this);\n      this.resetId = setTimeout(fn, CLICK_COUNT_TIMEOUT);\n    },\n    cancelResetClickCount: function() {\n      if (this.resetId) {\n        clearTimeout(this.resetId);\n      }\n    },\n    typeToButtons: function(type) {\n      var ret = 0;\n      if (type === 'touchstart' || type === 'touchmove') {\n        ret = 1;\n      }\n      return ret;\n    },\n    touchToPointer: function(inTouch) {\n      var cte = this.currentTouchEvent;\n      var e = dispatcher.cloneEvent(inTouch);\n\n      // We reserve pointerId 1 for Mouse.\n      // Touch identifiers can start at 0.\n      // Add 2 to the touch identifier for compatibility.\n      var id = e.pointerId = inTouch.identifier + 2;\n      e.target = captureInfo[id] || findTarget(e);\n      e.bubbles = true;\n      e.cancelable = true;\n      e.detail = this.clickCount;\n      e.button = 0;\n      e.buttons = this.typeToButtons(cte.type);\n      e.width = (inTouch.radiusX || inTouch.webkitRadiusX || 0) * 2;\n      e.height = (inTouch.radiusY || inTouch.webkitRadiusY || 0) * 2;\n      e.pressure = inTouch.force || inTouch.webkitForce || 0.5;\n      e.isPrimary = this.isPrimaryTouch(inTouch);\n      e.pointerType = this.POINTER_TYPE;\n\n      // forward modifier keys\n      e.altKey = cte.altKey;\n      e.ctrlKey = cte.ctrlKey;\n      e.metaKey = cte.metaKey;\n      e.shiftKey = cte.shiftKey;\n\n      // forward touch preventDefaults\n      var self = this;\n      e.preventDefault = function() {\n        self.scrolling = false;\n        self.firstXY = null;\n        cte.preventDefault();\n      };\n      return e;\n    },\n    processTouches: function(inEvent, inFunction) {\n      var tl = inEvent.changedTouches;\n      this.currentTouchEvent = inEvent;\n      for (var i = 0, t; i < tl.length; i++) {\n        t = tl[i];\n        inFunction.call(this, this.touchToPointer(t));\n      }\n    },\n\n    // For single axis scrollers, determines whether the element should emit\n    // pointer events or behave as a scroller\n    shouldScroll: function(inEvent) {\n      if (this.firstXY) {\n        var ret;\n        var scrollAxis = inEvent.currentTarget._scrollType;\n        if (scrollAxis === 'none') {\n\n          // this element is a touch-action: none, should never scroll\n          ret = false;\n        } else if (scrollAxis === 'XY') {\n\n          // this element should always scroll\n          ret = true;\n        } else {\n          var t = inEvent.changedTouches[0];\n\n          // check the intended scroll axis, and other axis\n          var a = scrollAxis;\n          var oa = scrollAxis === 'Y' ? 'X' : 'Y';\n          var da = Math.abs(t['client' + a] - this.firstXY[a]);\n          var doa = Math.abs(t['client' + oa] - this.firstXY[oa]);\n\n          // if delta in the scroll axis > delta other axis, scroll instead of\n          // making events\n          ret = da >= doa;\n        }\n        this.firstXY = null;\n        return ret;\n      }\n    },\n    findTouch: function(inTL, inId) {\n      for (var i = 0, l = inTL.length, t; i < l && (t = inTL[i]); i++) {\n        if (t.identifier === inId) {\n          return true;\n        }\n      }\n    },\n\n    // In some instances, a touchstart can happen without a touchend. This\n    // leaves the pointermap in a broken state.\n    // Therefore, on every touchstart, we remove the touches that did not fire a\n    // touchend event.\n    // To keep state globally consistent, we fire a\n    // pointercancel for this \"abandoned\" touch\n    vacuumTouches: function(inEvent) {\n      var tl = inEvent.touches;\n\n      // pointermap.size should be < tl.length here, as the touchstart has not\n      // been processed yet.\n      if (pointermap$1.size >= tl.length) {\n        var d = [];\n        pointermap$1.forEach(function(value, key) {\n\n          // Never remove pointerId == 1, which is mouse.\n          // Touch identifiers are 2 smaller than their pointerId, which is the\n          // index in pointermap.\n          if (key !== 1 && !this.findTouch(tl, key - 2)) {\n            var p = value.out;\n            d.push(p);\n          }\n        }, this);\n        d.forEach(this.cancelOut, this);\n      }\n    },\n    touchstart: function(inEvent) {\n      this.vacuumTouches(inEvent);\n      this.setPrimaryTouch(inEvent.changedTouches[0]);\n      this.dedupSynthMouse(inEvent);\n      if (!this.scrolling) {\n        this.clickCount++;\n        this.processTouches(inEvent, this.overDown);\n      }\n    },\n    overDown: function(inPointer) {\n      pointermap$1.set(inPointer.pointerId, {\n        target: inPointer.target,\n        out: inPointer,\n        outTarget: inPointer.target\n      });\n      dispatcher.enterOver(inPointer);\n      dispatcher.down(inPointer);\n    },\n    touchmove: function(inEvent) {\n      if (!this.scrolling) {\n        if (this.shouldScroll(inEvent)) {\n          this.scrolling = true;\n          this.touchcancel(inEvent);\n        } else {\n          inEvent.preventDefault();\n          this.processTouches(inEvent, this.moveOverOut);\n        }\n      }\n    },\n    moveOverOut: function(inPointer) {\n      var event = inPointer;\n      var pointer = pointermap$1.get(event.pointerId);\n\n      // a finger drifted off the screen, ignore it\n      if (!pointer) {\n        return;\n      }\n      var outEvent = pointer.out;\n      var outTarget = pointer.outTarget;\n      dispatcher.move(event);\n      if (outEvent && outTarget !== event.target) {\n        outEvent.relatedTarget = event.target;\n        event.relatedTarget = outTarget;\n\n        // recover from retargeting by shadow\n        outEvent.target = outTarget;\n        if (event.target) {\n          dispatcher.leaveOut(outEvent);\n          dispatcher.enterOver(event);\n        } else {\n\n          // clean up case when finger leaves the screen\n          event.target = outTarget;\n          event.relatedTarget = null;\n          this.cancelOut(event);\n        }\n      }\n      pointer.out = event;\n      pointer.outTarget = event.target;\n    },\n    touchend: function(inEvent) {\n      this.dedupSynthMouse(inEvent);\n      this.processTouches(inEvent, this.upOut);\n    },\n    upOut: function(inPointer) {\n      if (!this.scrolling) {\n        dispatcher.up(inPointer);\n        dispatcher.leaveOut(inPointer);\n      }\n      this.cleanUpPointer(inPointer);\n    },\n    touchcancel: function(inEvent) {\n      this.processTouches(inEvent, this.cancelOut);\n    },\n    cancelOut: function(inPointer) {\n      dispatcher.cancel(inPointer);\n      dispatcher.leaveOut(inPointer);\n      this.cleanUpPointer(inPointer);\n    },\n    cleanUpPointer: function(inPointer) {\n      pointermap$1.delete(inPointer.pointerId);\n      this.removePrimaryPointer(inPointer);\n    },\n\n    // prevent synth mouse events from creating pointer events\n    dedupSynthMouse: function(inEvent) {\n      var lts = mouseEvents.lastTouches;\n      var t = inEvent.changedTouches[0];\n\n      // only the primary finger will synth mouse events\n      if (this.isPrimaryTouch(t)) {\n\n        // remember x/y of last touch\n        var lt = { x: t.clientX, y: t.clientY };\n        lts.push(lt);\n        var fn = (function(lts, lt) {\n          var i = lts.indexOf(lt);\n          if (i > -1) {\n            lts.splice(i, 1);\n          }\n        }).bind(null, lts, lt);\n        setTimeout(fn, DEDUP_TIMEOUT);\n      }\n    }\n  };\n\n  INSTALLER = new Installer(touchEvents.elementAdded, touchEvents.elementRemoved,\n    touchEvents.elementChanged, touchEvents);\n\n  var pointermap$2 = dispatcher.pointermap;\n  var HAS_BITMAP_TYPE = window.MSPointerEvent &&\n    typeof window.MSPointerEvent.MSPOINTER_TYPE_MOUSE === 'number';\n  var msEvents = {\n    events: [\n      'MSPointerDown',\n      'MSPointerMove',\n      'MSPointerUp',\n      'MSPointerOut',\n      'MSPointerOver',\n      'MSPointerCancel',\n      'MSGotPointerCapture',\n      'MSLostPointerCapture'\n    ],\n    register: function(target) {\n      dispatcher.listen(target, this.events);\n    },\n    unregister: function(target) {\n      dispatcher.unlisten(target, this.events);\n    },\n    POINTER_TYPES: [\n      '',\n      'unavailable',\n      'touch',\n      'pen',\n      'mouse'\n    ],\n    prepareEvent: function(inEvent) {\n      var e = inEvent;\n      if (HAS_BITMAP_TYPE) {\n        e = dispatcher.cloneEvent(inEvent);\n        e.pointerType = this.POINTER_TYPES[inEvent.pointerType];\n      }\n      return e;\n    },\n    cleanup: function(id) {\n      pointermap$2.delete(id);\n    },\n    MSPointerDown: function(inEvent) {\n      pointermap$2.set(inEvent.pointerId, inEvent);\n      var e = this.prepareEvent(inEvent);\n      dispatcher.down(e);\n    },\n    MSPointerMove: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.move(e);\n    },\n    MSPointerUp: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.up(e);\n      this.cleanup(inEvent.pointerId);\n    },\n    MSPointerOut: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.leaveOut(e);\n    },\n    MSPointerOver: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.enterOver(e);\n    },\n    MSPointerCancel: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.cancel(e);\n      this.cleanup(inEvent.pointerId);\n    },\n    MSLostPointerCapture: function(inEvent) {\n      var e = dispatcher.makeEvent('lostpointercapture', inEvent);\n      dispatcher.dispatchEvent(e);\n    },\n    MSGotPointerCapture: function(inEvent) {\n      var e = dispatcher.makeEvent('gotpointercapture', inEvent);\n      dispatcher.dispatchEvent(e);\n    }\n  };\n\n  function applyPolyfill() {\n\n    // only activate if this platform does not have pointer events\n    if (!window.PointerEvent) {\n      window.PointerEvent = PointerEvent;\n\n      if (window.navigator.msPointerEnabled) {\n        var tp = window.navigator.msMaxTouchPoints;\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\n          value: tp,\n          enumerable: true\n        });\n        dispatcher.registerSource('ms', msEvents);\n      } else {\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\n          value: 0,\n          enumerable: true\n        });\n        dispatcher.registerSource('mouse', mouseEvents);\n        if (window.ontouchstart !== undefined) {\n          dispatcher.registerSource('touch', touchEvents);\n        }\n      }\n\n      dispatcher.register(document);\n    }\n  }\n\n  var n = window.navigator;\n  var s;\n  var r;\n  var h;\n  function assertActive(id) {\n    if (!dispatcher.pointermap.has(id)) {\n      var error = new Error('InvalidPointerId');\n      error.name = 'InvalidPointerId';\n      throw error;\n    }\n  }\n  function assertConnected(elem) {\n    var parent = elem.parentNode;\n    while (parent && parent !== elem.ownerDocument) {\n      parent = parent.parentNode;\n    }\n    if (!parent) {\n      var error = new Error('InvalidStateError');\n      error.name = 'InvalidStateError';\n      throw error;\n    }\n  }\n  function inActiveButtonState(id) {\n    var p = dispatcher.pointermap.get(id);\n    return p.buttons !== 0;\n  }\n  if (n.msPointerEnabled) {\n    s = function(pointerId) {\n      assertActive(pointerId);\n      assertConnected(this);\n      if (inActiveButtonState(pointerId)) {\n        dispatcher.setCapture(pointerId, this, true);\n        this.msSetPointerCapture(pointerId);\n      }\n    };\n    r = function(pointerId) {\n      assertActive(pointerId);\n      dispatcher.releaseCapture(pointerId, true);\n      this.msReleasePointerCapture(pointerId);\n    };\n  } else {\n    s = function setPointerCapture(pointerId) {\n      assertActive(pointerId);\n      assertConnected(this);\n      if (inActiveButtonState(pointerId)) {\n        dispatcher.setCapture(pointerId, this);\n      }\n    };\n    r = function releasePointerCapture(pointerId) {\n      assertActive(pointerId);\n      dispatcher.releaseCapture(pointerId);\n    };\n  }\n  h = function hasPointerCapture(pointerId) {\n    return !!dispatcher.captureInfo[pointerId];\n  };\n\n  function applyPolyfill$1() {\n    if (window.Element && !Element.prototype.setPointerCapture) {\n      Object.defineProperties(Element.prototype, {\n        'setPointerCapture': {\n          value: s\n        },\n        'releasePointerCapture': {\n          value: r\n        },\n        'hasPointerCapture': {\n          value: h\n        }\n      });\n    }\n  }\n\n  applyAttributeStyles();\n  applyPolyfill();\n  applyPolyfill$1();\n\n  var pointerevents = {\n    dispatcher: dispatcher,\n    Installer: Installer,\n    PointerEvent: PointerEvent,\n    PointerMap: PointerMap,\n    targetFinding: targeting\n  };\n\n  return pointerevents;\n\n}));\n"]}