{"version":3,"sources":["script/Point.js","script/Pointer.js","script/Gesture.js","script/index.js"],"names":["Point","x","y","Math","sqrt","pow","Pointer","pointerId","id","startPoint","prevPoint","prevTs","Date","now","Gesture","pointers","translateParams","_scaleParams","_brightnessParams","prevPinchDistance","prevRotateAngle","event","type","handlePointerDown","handlePointerMove","handlePointerUp","handlePointerCancel","filter","item","length","push","currentPointer","getPointer","newPoint","delta","substract","add","secondPointer","pointer","handlePinch","handleRotate","update","releasePointer","array","Error","newPinchDistance","distanceTo","relativeSizeChange","scaleParams","vector","newRotateAngle","atan2","angleChange","brightnessParams","value","cameraContainer","document","querySelector","cameraImage","bar","scaleBlock","brightnessBlock","gesture","myPointer","initialImageWidth","offsetWidth","calcBarPosition","xTranslate","containerWidth","position","style","width","left","addEventListener","setPointerCapture","translate","backgroundPosition","scale","transform","brightness","textContent","floor","releasePointerCapture"],"mappings":"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","file":"script.821dd449.map","sourceRoot":"../src","sourcesContent":["export default class Point {\n  constructor({x, y}) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add ({x, y}) {\n    return new Point({x: this.x + x, y: this.y + y});\n  }\n\n  substract ({x, y}) {\n    return new Point({x: this.x - x, y: this.y - y});\n  }\n\n  distanceTo ({x, y}) {\n    return Math.sqrt(Math.pow(this.x - x, 2) + Math.pow(this.y - y, 2));\n  }\n}\n","import Point from './Point';\n\nexport default class Pointer {\n  // TODO - maybe should use { offsetX, offsetY } together or instead\n  constructor ({x, y, pointerId}) {\n    this.id = pointerId;\n    this.startPoint = new Point({x, y});\n    this.prevPoint = new Point({x, y});\n    this.prevTs = Date.now();\n  }\n\n  update({x, y, pointerId}) {\n    if (this.id === pointerId) {\n      this.prevPoint = new Point({x, y});\n      this.prevTs = Date.now();\n    }\n  }\n}\n","import Pointer from \"./Pointer\"\nimport Point from './Point';\n\nexport default class Gesture {\n  constructor() {\n    this.pointers = [];\n    this.translateParams = new Point({x: 0, y: 0});\n\n    this._scaleParams = 1.0;\n    this._brightnessParams = 1.0;\n\n    this.prevPinchDistance = null;\n    this.prevRotateAngle = null;\n\n  }\n\n  handlePointerEvent(event) {\n    switch (event.type) {\n      case 'pointerdown': this.handlePointerDown(event); break;\n      case 'pointermove': this.handlePointerMove(event); break;\n      case 'pointerup': this.handlePointerUp(event); break;\n      case 'pointercancel': this.handlePointerCancel(event); break;\n    }\n  }\n\n  handlePointerDown(event) {\n    if (this.pointers.filter(item => item.id === event.pointerId).length === 0) {\n      this.pointers.push(new Pointer(event));\n    }\n  }\n\n  handlePointerMove(event) {\n    const currentPointer = this.getPointer(event);\n\n    if (currentPointer == null) {\n      // currentPointer.update(event);\n      return;\n    } else {\n\n      if (this.pointers.length === 1) {\n        const newPoint = new Point(event);\n        const delta = newPoint.substract(currentPointer.prevPoint);\n        this.translateParams = this.translateParams.add(delta);\n\n      } else if (this.pointers.length === 2) {\n        const secondPointer = this.pointers\n          .filter(pointer => pointer.id !== event.pointerId)[0];\n\n        this.handlePinch(currentPointer, secondPointer);\n\n        // rotate\n        this.handleRotate(this.pointers[0], this.pointers[1]);\n      }\n      // update relevant pointer with event coordinates\n      currentPointer.update(event);\n    }\n  }\n\n  handlePointerUp(event) {\n    this.releasePointer(event)\n  }\n\n  handlePointerCancel(event) {\n    this.releasePointer(event)\n  }\n\n  releasePointer ({ pointerId }) {\n    this.pointers = this.pointers.filter(pointer => pointer.id !== pointerId);\n    if (this.pointers.length < 2) {\n      this.prevPinchDistance = null;\n      this.prevRotateAngle = null;\n    }\n  }\n\n  getPointer({ pointerId }) {\n    const array = this.pointers.filter(pointer => pointer.id === pointerId);\n    if (array.length === 1) {\n      return array[0];\n    } else if (array.length < 1) {\n      return null;\n    } else if (array.length > 1) {\n      throw new Error('unique pointer was registered twice');\n    }\n  }\n\n  handlePinch(currentPointer, secondPointer) {\n    const newPinchDistance = currentPointer\n      .prevPoint.distanceTo(secondPointer.prevPoint);\n\n    if (this.prevPinchDistance) {\n      const delta = newPinchDistance - this.prevPinchDistance;\n      const initialWidth = 2560;\n\n      const k = 5; // magic coefficient to make scale faster;\n      const relativeSizeChange = k * delta / initialWidth;\n\n      this.scaleParams += relativeSizeChange;\n    }\n    // update prevPinchDistance\n    this.prevPinchDistance = newPinchDistance;\n  }\n\n  handleRotate(currentPointer, secondPointer) {\n    const vector = currentPointer.prevPoint.substract(secondPointer.prevPoint);\n    const newRotateAngle = Math.atan2(vector.y, vector.x);\n\n    if (this.prevRotateAngle) {\n      const delta = newRotateAngle - this.prevRotateAngle;\n\n      const k = 0.2;// magic coefficient to slow change of brightness\n      const angleChange = k * delta;\n\n      this.brightnessParams += angleChange;\n    }\n\n    this.prevRotateAngle = newRotateAngle;\n  }\n\n  get scaleParams() {\n    return this._scaleParams;\n  }\n\n  set scaleParams(value) {\n    if (value > 0.3 && value < 2) {\n      this._scaleParams = value;\n    }\n  }\n\n  get brightnessParams() {\n    return this._brightnessParams;\n  }\n\n  set brightnessParams(value) {\n    if (value > 0.5 && value < 2) {\n      this._brightnessParams = value;\n    }\n  }\n\n}\n","import classes from '../style/style.css';\nimport Gesture from './Gesture';\nimport Point from './Point';\n\nconst cameraContainer = document.querySelector('.camera-view__container');\nconst cameraImage = document.querySelector('.camera-view__image');\nconst bar = document.querySelector('.bar');\n\nconst scaleBlock = document.querySelector('#scale');\nconst brightnessBlock = document.querySelector('#brightness');\n\nconst gesture = new Gesture();\n\n// FAKE pointer for debugging\nconst myPointer = {\n  id: 10000,\n  startPoint: new Point({x: 400, y: 250}),\n  prevPoint: new Point({x: 400, y: 250}),\n  prevTs: Date.now()\n};\n// gesture.pointers.push(myPointer);\n\nconst initialImageWidth = cameraImage.offsetWidth;\n\nfunction calcBarPosition() {\n  const xTranslate = gesture.translateParams.x;\n  const containerWidth = cameraContainer.offsetWidth;\n  const position = ((initialImageWidth / 2 + xTranslate)\n    / initialImageWidth * containerWidth - bar.style.width / 2) % containerWidth;\n\n  if (position < 0) {\n    return position + containerWidth\n  } else {\n    return position;\n  }\n}\n\nbar.style.left = calcBarPosition() + 'px';\n\ncameraImage.addEventListener('pointerdown', (event) => {\n  cameraImage.setPointerCapture(event.pointerId);\n  gesture.handlePointerDown(event);\n});\n\ncameraImage.addEventListener('pointermove', (event) => {\n  gesture.handlePointerMove(event);\n\n  const translate = gesture.translateParams;\n  cameraImage.style.backgroundPosition = `${translate.x}px ${translate.y}px`;\n\n  const scale = gesture.scaleParams;\n  cameraImage.style.transform = `scale(${scale})`;\n\n  const brightness = gesture.brightnessParams;\n  cameraImage.style.filter = `brightness(${brightness})`;\n\n  bar.style.left = calcBarPosition() + 'px';\n\n  scaleBlock.textContent = Math.floor(scale * 100) + '%';\n  brightnessBlock.textContent = Math.floor(brightness * 100) + '%';\n});\n\ncameraImage.addEventListener('pointerup', (event) => {\n  gesture.handlePointerUp(event);\n  cameraImage.releasePointerCapture(event.pointerId);\n});\n\ncameraImage.addEventListener('pointercancel', (event) => {\n  gesture.handlePointerCancel(event);\n  cameraImage.releasePointerCapture(event.pointerId);\n});\n"]}